Index: spoti_fly/spoti_fly/install_dependencies.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import subprocess\r\nimport os\r\nimport sys\r\n\r\ndef install_scoop():\r\n    try:\r\n        # Check if Scoop is already installed\r\n        subprocess.run([\"scoop\", \"help\"], check=True)\r\n        print(\"Scoop is already installed.\")\r\n    except Exception:\r\n        print(\"Installing Scoop...\")\r\n        # Install Scoop using PowerShell\r\n        subprocess.run(['powershell.exe', '-Command',\r\n                        'Set-ExecutionPolicy RemoteSigned -Scope CurrentUser; '\r\n                        'iwr get.scoop.sh -useb | iex'], check=True)\r\n\r\ndef install_ffmpeg():\r\n    try:\r\n        # Check if FFmpeg is already installed\r\n        subprocess.run([\"ffmpeg\", \"-version\"], check=True)\r\n        print(\"FFmpeg is already installed.\")\r\n    except Exception:\r\n        print(\"Installing FFmpeg...\")\r\n        # Install FFmpeg using Scoop\r\n        subprocess.run([\"scoop\", \"install\", \"ffmpeg\"], check=True)\r\n\r\n
===================================================================
diff --git a/spoti_fly/spoti_fly/install_dependencies.py b/spoti_fly/spoti_fly/install_dependencies.py
--- a/spoti_fly/spoti_fly/install_dependencies.py	
+++ b/spoti_fly/spoti_fly/install_dependencies.py	
@@ -1,26 +1,40 @@
 import subprocess
 import os
-import sys
 
-def install_scoop():
+def is_installed(command):
+    """Check if a command exists on the system."""
     try:
-        # Check if Scoop is already installed
-        subprocess.run(["scoop", "help"], check=True)
-        print("Scoop is already installed.")
+        subprocess.run(command, stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL, shell=True)
+        return True
     except Exception:
-        print("Installing Scoop...")
-        # Install Scoop using PowerShell
-        subprocess.run(['powershell.exe', '-Command',
-                        'Set-ExecutionPolicy RemoteSigned -Scope CurrentUser; '
-                        'iwr get.scoop.sh -useb | iex'], check=True)
+        return False
+
+def install_scoop():
+    """Install Scoop if it's not already installed."""
+    if is_installed('scoop'):
+        #print("Scoop is already installed.")
+        return
+    try:
+        # Suppress output and errors using DEVNULL
+        subprocess.run(
+            'powershell -Command "Set-ExecutionPolicy RemoteSigned -scope CurrentUser; iwr -useb get.scoop.sh | iex"',
+            shell=True, stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL
+        )
+        print("Scoop installed successfully.")
+    except subprocess.CalledProcessError:
+        print("Failed to install Scoop.")
 
 def install_ffmpeg():
+    """Install FFmpeg using Scoop if it's not already installed."""
+    if is_installed('ffmpeg'):
+        #print("FFmpeg is already installed.")
+        return
     try:
-        # Check if FFmpeg is already installed
-        subprocess.run(["ffmpeg", "-version"], check=True)
-        print("FFmpeg is already installed.")
-    except Exception:
-        print("Installing FFmpeg...")
-        # Install FFmpeg using Scoop
-        subprocess.run(["scoop", "install", "ffmpeg"], check=True)
-
+        # Suppress output and errors using DEVNULL
+        subprocess.run(
+            'powershell -Command "scoop install ffmpeg"',
+            shell=True, stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL
+        )
+        print("FFmpeg installed successfully.")
+    except subprocess.CalledProcessError:
+        print("Failed to install FFmpeg.")
